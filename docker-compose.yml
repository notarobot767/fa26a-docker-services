version: "3.9"
services:
  code-server:
    container_name: msb_code-server
    hostname: code-server
    image: ghcr.io/linuxserver/code-server:latest
      #https://hub.docker.com/r/linuxserver/code-server
    environment:
      - TZ=$TZ
      - PUID=$ID
      - PGID=$ID
    ports:
      - $SRV_IP_1:$CS_H_PORT:8443
    volumes:
       - $CS_CONFIG_DIR:/config
       - $ROOT_DIR:/app
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 1g
  ns1:
    container_name: msb_ns1
    hostname: ns1
    build:
      context: ./app/bind9
    volumes:
      - $DNS_LOG_DIR:/app/log
    ports:
      - $SRV_IP_1:53:53
      - $SRV_IP_1:53:53/udp
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 2g
  ns1:
    container_name: msb_ns2
    hostname: ns2
    build:
      context: ./app/bind9
    volumes:
      - $DNS_LOG_DIR:/app/log
    ports:
      - $SRV_IP_2:53:53
      - $SRV_IP_2:53:53/udp
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 2g
  tftp:
    container_name: msb_tftp
    hostname: tftp
    build:
      context: ./app/tftp
    volumes:
      - $TFTP_LOG_DIR:/var/log
      - $TFTP_DATA_DIR:/srv/tftp
    ports:
      - $SRV_IP_1:69:69/udp
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512m
  ntp-a:
    container_name: msb_ntp-a
    hostname: ntp-a
    build:
      context: ./app/ntp
    ports:
      - $SRV_IP_1:123:123/udp
    cap_add:
      - SYS_TIME
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 256m
  ntp-b:
    container_name: msb_ntp-b
    hostname: ntp-b
    build:
      context: ./app/ntp
    ports:
      - $SRV_IP_2:123:123/udp
    cap_add:
      - SYS_TIME
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 256m
  elastic:
    container_name: msb_elastic
    hostname: elastic
    image: docker.elastic.co/elasticsearch/elasticsearch:7.13.2
      #https://www.elastic.co/guide/en/elasticsearch/reference/current/docker.html
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms4g -Xmx4g"
        #set no more than half of allocated memory
        #https://www.elastic.co/guide/en/elasticsearch/reference/current/advanced-configuration.html#set-jvm-options
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - $ELASTIC_DATA_DIR:/usr/share/elasticsearch/data
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '4.0'
          memory: 8g
  logstash:
    depends_on:
      - elastic
    container_name: msb_logstash
    hostname: logstash
    build:
      context: ./app/elk/logstash
    volumes:
      - ${LOGSTASH_DATA_DIR}:/usr/share/logstash/data
    #ports:
    #  - $SRV_IP_1:$LOGSTASH_H_PORT:$LOGSTASH_C_PORT/udp
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '4.0'
          memory: 3g
  kibana:
    depends_on:
      - elastic
    container_name: msb_kibana
    hostname: kibana
    build:
      context: ./app/elk/kibana
    ports:
      - $SRV_IP_1:$KIBANA_H_PORT:5601
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 2g
  fb_tftp:
    depends_on:
      - logstash
    container_name: msb_fb_tftp
    hostname: fb_tftp
    build:
      context: ./app/elk/filebeat/tftp
      #may have to restrict fb.yml to read only on host
    volumes:
      - $FB_TFTP_DATA_DIR:/usr/share/filebeat/data
      - $TFTP_LOG_DIR:/app/log:ro
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 256m
  fb_dns:
    depends_on:
      - logstash
    container_name: msb_fb_dns
    hostname: fb_dns
    build:
      context: ./app/elk/filebeat/dns
      #may have to restrict fb.yml to read only on host
    volumes:
      - $FB_DNS_DATA_DIR:/usr/share/filebeat/data
      - $DNS_LOG_DIR:/app/log:ro
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 256m
  fb_netflow:
    depends_on:
      - elastic
    container_name: msb_fb_netflow
    hostname: fb_dns
    build:
      context: ./app/elk/filebeat/netflow
      #may have to restrict fb.yml to read only on host
    volumes:
      - $FB_NETFLOW_DATA_DIR:/usr/share/filebeat/data
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 256m
  fb_cisco:
    depends_on:
      - elastic
    container_name: msb_fb_cisco
    hostname: fb_cisco
    build:
      context: ./app/elk/filebeat/netflow
      #may have to restrict fb.yml to read only on host
    volumes:
      - $FB_CISCO_DATA_DIR:/usr/share/filebeat/data
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 256m
  fb_panos:
    depends_on:
      - elastic
    container_name: msb_fb_panos
    hostname: fb_panos
    build:
      context: ./app/elk/filebeat/panos
      #may have to restrict fb.yml to read only on host
    volumes:
      - $FB_PANOS_DATA_DIR:/usr/share/filebeat/data
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 256m
  radius_db:
    container_name: msb_radius_db
    hostname: radius_db
    build:
      context: ./app/freeradius/radius_db
    environment:
      MYSQL_ROOT_PASSWORD: $RADIUS_SQL_ROOT_PW
      #change this before deployment
      #also change default pws in
        #./app/radius_db/docker-entrypoint-initdb.d/01_create_db_add_user.sql
        #./app/daloradius/daloradius.conf.php
    volumes:
      - $RADIUS_DB_DIR:/var/lib/mysql
    deploy:
      resources:
        limits:
          memory: 256m